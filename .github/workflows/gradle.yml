# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: SpringBoot with Gradle

on:
  push:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: 8.0
          distribution: 'temurin'
        
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build with Gradle
        run: ./gradlew build
        shell: bash
      

      - name: Make zip file #1
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials #2
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3 #3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://hanghae99-s3/$GITHUB_SHA.zip

      - name: Code Deploy #4
        run: aws deploy create-deployment
          --application-name springboot-codedeploy
          --deployment-group-name springboot-codedeploy-group
          --deployment-config-name CodeDeployDefault.OneAtATime
          --file-exists-behavior OVERWRITE
          --s3-location bucket=hanghae99-s3,bundleType=zip,key=$GITHUB_SHA.zip
          --region ap-northeast-2
